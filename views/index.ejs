<!doctype html>
<html lang="en">
<head>
    <title>GoT Characters</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    
    <!-- Bootstrap CSS -->
    <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
        rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
        crossorigin="anonymous"
    />
    

    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap" rel="stylesheet">
    

    <link rel="stylesheet" href="/pokemon-cards.css" />
</head>

<body>
    <%- include('partials/header') %>

    <div class="container-main">
        <h1>Game of Thrones Characters</h1>

        <% if (characters && characters.length) { %>
            <div class="carousel-wrapper">

                <button class="carousel-arrow left" aria-label="Scroll left">‹</button>

                <div class="card-strip">
                    <% characters.forEach(function(ch){ %>
                        <article class="character-card" data-id="<%= ch.id %>">
                            <img 
                                class="character-img" 
                                src="<%= ch.imageUrl %>" 
                                alt="<%= ch.fullName %>"
                            />
                            <div class="card-body">
                                <h3 class="card-title"><%= ch.fullName %></h3>
                                <p class="card-subtitle"><%= ch.title %></p>
                            </div>
                        </article>
                    <% }) %>
                </div>
                
                <button class="carousel-arrow right" aria-label="Scroll right">›</button>
            </div>
        <% } else { %>
            <p style="text-align: center; color: var(--gold); font-size: 1.2rem;">No characters to display.</p>
        <% } %>
    </div>

        <%- include('partials/footer') %>
    <!-- Bootstrap JavaScript Libraries -->
        <script
            src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"
        ></script>

        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
            integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
            crossorigin="anonymous"
        ></script>
        <script src="/carousel.js"></script>

        <script>
            let bsModal, existingModal;

            let renderCharacterModal = async function(id){
            if (id === null || id === undefined) return;

            try {
                const res = await fetch(`/getSingleCharacter?id=${encodeURIComponent(id)}`);
                if (!res.ok) throw new Error('Failed to fetch character');
                const html = await res.text();

                // Remove any existing modal element and insert the returned modal HTML
                existingModal = document.getElementById('characterModal');
                if (existingModal) existingModal.remove();

                const container = document.createElement('div');
                container.innerHTML = html;
                document.body.appendChild(container.firstElementChild);

                // Initialize Bootstrap modal and show it
                const modalEl = document.getElementById('characterModal');
                bsModal = new bootstrap.Modal(modalEl);
                bsModal.show();

                let modal_prev = document.getElementById('modal-prev');
                let modal_next = document.getElementById('modal-next');

                if(modal_prev) {
                    modal_prev.addEventListener('click', async () => {
                        const currentId = Number(modal_prev.dataset.id); 
                        const prevId = (currentId === 0) ? 52 : currentId - 1;

                        modalEl.addEventListener('hidden.bs.modal', () => {
                            renderCharacterModal(prevId);
                        }, { once: true });
                        
                        bsModal.hide();
                    });
                }

                if(modal_next) {
                    modal_next.addEventListener('click', async () => {
                        const currentId = Number(modal_next.dataset.id);
                        const nextId = (currentId === 52) ? 0 : currentId + 1;

                        console.log(nextId);

                        modalEl.addEventListener('hidden.bs.modal', () => {
                            renderCharacterModal(nextId);
                        }, { once: true });

                        bsModal.hide();
                    });
                }   
            } catch (err) {
                console.error(err);
            }
            }

            document.querySelectorAll('.character-card').forEach(card => {
            card.addEventListener('click', async () => {
                const id = card.dataset.id;
                await renderCharacterModal(id);
            });
            });
        </script>
    </body>
</html>